/* =============================================================================
   菱菱生日祝福网页 - 动画样式文件
   作者: 爱你的人
   创建时间: 2025年
   描述: 各种动画效果和关键帧动画，营造生动有趣的交互体验
   ============================================================================= */

/* ===== 基础动画关键帧 ===== */

/* 淡入向上动画 */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 淡入动画 */
@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

/* 淡出动画 */
@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* 缩放进入动画 */
@keyframes scaleIn {
    0% {
        opacity: 0;
        transform: scale(0.8);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

/* 弹跳动画 */
@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        transform: translateY(0);
    }
    40%, 43% {
        transform: translateY(-20px);
    }
    70% {
        transform: translateY(-10px);
    }
    90% {
        transform: translateY(-4px);
    }
}

/* 摇摆动画 */
@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(2px);
    }
}

/* 旋转动画 */
@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* 脉动动画 */
@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* 闪烁动画 */
@keyframes blink {
    0%, 50% {
        opacity: 1;
    }
    51%, 100% {
        opacity: 0.3;
    }
}

/* 光芒闪烁动画 */
@keyframes sparkle {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* 进度条加载动画 */
@keyframes progressLoad {
    0% {
        width: 0%;
    }
    20% {
        width: 30%;
    }
    50% {
        width: 60%;
    }
    80% {
        width: 90%;
    }
    100% {
        width: 100%;
    }
}

/* ===== 气球飘动动画 ===== */

/* 气球摆动动画 */
@keyframes balloonFloat {
    0%, 100% {
        transform: translateY(0px) rotate(-2deg);
    }
    33% {
        transform: translateY(-10px) rotate(1deg);
    }
    66% {
        transform: translateY(-5px) rotate(-1deg);
    }
}

/* 气球上升动画 */
@keyframes balloonRise {
    0% {
        transform: translateY(100vh) scale(0.8);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(-100px) scale(1.2);
        opacity: 0;
    }
}

/* 气球左右飘动 */
@keyframes balloonDrift {
    0%, 100% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(15px);
    }
    75% {
        transform: translateX(-15px);
    }
}

/* ===== 星星闪烁动画 ===== */

/* 星星闪烁 */
@keyframes starTwinkle {
    0%, 100% {
        opacity: 0.3;
        transform: scale(1);
    }
    50% {
        opacity: 1;
        transform: scale(1.2);
    }
}

/* 星星脉动 */
@keyframes starPulse {
    0%, 100% {
        opacity: 0.5;
        transform: scale(0.8) rotate(0deg);
    }
    50% {
        opacity: 1;
        transform: scale(1.3) rotate(180deg);
    }
}

/* ===== 彩带飘洒动画 ===== */

/* 彩带飘落 */
@keyframes confettiFall {
    0% {
        transform: translateY(-100px) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

/* 彩带摆动 */
@keyframes confettiSwing {
    0%, 100% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(20px);
    }
    75% {
        transform: translateX(-20px);
    }
}

/* ===== 蜡烛火焰动画 ===== */

/* 火焰摆动 */
@keyframes flameFlicker {
    0%, 100% {
        transform: scale(1) skewX(0deg);
        opacity: 1;
    }
    25% {
        transform: scale(1.1) skewX(2deg);
        opacity: 0.9;
    }
    50% {
        transform: scale(0.95) skewX(-1deg);
        opacity: 0.95;
    }
    75% {
        transform: scale(1.05) skewX(1deg);
        opacity: 0.85;
    }
}

/* 蜡烛点燃动画 */
@keyframes candleLight {
    0% {
        opacity: 0;
        transform: scale(0);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.3);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

/* ===== 文字动画 ===== */

/* 打字机效果 */
@keyframes typewriter {
    0% {
        width: 0;
    }
    100% {
        width: 100%;
    }
}

/* 文字发光动画 */
@keyframes textGlow {
    0%, 100% {
        text-shadow: 0 0 5px rgba(255, 105, 180, 0.5);
    }
    50% {
        text-shadow: 0 0 20px rgba(255, 105, 180, 0.8), 0 0 30px rgba(255, 105, 180, 0.6);
    }
}

/* 彩虹文字动画 */
@keyframes rainbow {
    0% {
        color: #FF69B4;
    }
    16.66% {
        color: #FF6347;
    }
    33.33% {
        color: #FFD700;
    }
    50% {
        color: #32CD32;
    }
    66.66% {
        color: #1E90FF;
    }
    83.33% {
        color: #9370DB;
    }
    100% {
        color: #FF69B4;
    }
}

/* 文字弹跳动画 */
@keyframes textBounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

/* ===== 蛋糕动画 ===== */

/* 蛋糕旋转展示 */
@keyframes cakeRotate {
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(360deg);
    }
}

/* 蛋糕出现动画 */
@keyframes cakeAppear {
    0% {
        opacity: 0;
        transform: scale(0.5) translateY(50px);
    }
    60% {
        opacity: 1;
        transform: scale(1.1) translateY(-10px);
    }
    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* ===== 按钮和交互动画 ===== */

/* 按钮按压动画 */
@keyframes buttonPress {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.95);
    }
    100% {
        transform: scale(1);
    }
}

/* 按钮悬停发光 */
@keyframes buttonGlow {
    0%, 100% {
        box-shadow: 0 4px 20px rgba(255, 105, 180, 0.3);
    }
    50% {
        box-shadow: 0 4px 30px rgba(255, 105, 180, 0.6), 0 0 40px rgba(255, 105, 180, 0.4);
    }
}

/* ===== 粒子效果动画 ===== */

/* 心形粒子飘落 */
@keyframes heartFall {
    0% {
        transform: translateY(-20px) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 0;
    }
}

/* 花瓣飘洒 */
@keyframes petalFloat {
    0% {
        transform: translateY(-10px) rotate(0deg);
        opacity: 0.8;
    }
    50% {
        transform: translateX(30px) rotate(180deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) translateX(-30px) rotate(360deg);
        opacity: 0;
    }
}

/* 泡泡上升 */
@keyframes bubbleRise {
    0% {
        transform: translateY(0) scale(0.3);
        opacity: 0.7;
    }
    50% {
        transform: translateY(-50vh) scale(1);
        opacity: 1;
    }
    100% {
        transform: translateY(-100vh) scale(1.2);
        opacity: 0;
    }
}

/* ===== 烟花爆炸动画 ===== */

/* 烟花爆炸 */
@keyframes fireworkExplode {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    50% {
        transform: scale(1);
        opacity: 0.8;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

/* 烟花粒子散射 */
@keyframes fireworkSpark {
    0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
    }
    100% {
        transform: translate(var(--random-x, 100px), var(--random-y, 100px)) scale(0);
        opacity: 0;
    }
}

/* ===== 灯光效果动画 ===== */

/* 灯泡闪烁 */
@keyframes lightBlink {
    0%, 50%, 100% {
        opacity: 1;
        filter: brightness(1);
    }
    25%, 75% {
        opacity: 0.7;
        filter: brightness(1.5);
    }
}

/* 彩色灯光循环 */
@keyframes colorCycle {
    0% {
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

/* 聚光灯效果 */
@keyframes spotlight {
    0%, 100% {
        opacity: 0.3;
        transform: scale(1);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.2);
    }
}

/* ===== 加载和过渡动画 ===== */

/* 页面切换滑入 */
@keyframes slideInRight {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

/* 页面切换滑出 */
@keyframes slideOutLeft {
    0% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(-100%);
        opacity: 0;
    }
}

/* ===== 应用动画类 ===== */

/* 基础动画类 */
.animate-fadeIn {
    animation: fadeIn var(--transition-slow) ease-out forwards;
}

.animate-fadeInUp {
    animation: fadeInUp var(--transition-slow) ease-out forwards;
}

.animate-scaleIn {
    animation: scaleIn var(--transition-normal) ease-out forwards;
}

.animate-bounce {
    animation: bounce 1s infinite;
}

.animate-pulse {
    animation: pulse 2s infinite;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

/* 文字动画类 */
.animate-typewriter {
    overflow: hidden;
    white-space: nowrap;
    animation: typewriter 3s steps(40) forwards;
}

.animate-textGlow {
    animation: textGlow 3s infinite;
}

.animate-rainbow {
    animation: rainbow 3s infinite;
}

.animate-textBounce {
    animation: textBounce 1s infinite;
}

/* 气球动画类 */
.animate-balloonFloat {
    animation: balloonFloat 3s ease-in-out infinite;
}

.animate-balloonRise {
    animation: balloonRise 8s linear infinite;
}

/* 星星动画类 */
.animate-starTwinkle {
    animation: starTwinkle 2s infinite;
}

.animate-starPulse {
    animation: starPulse 3s infinite;
}

/* 彩带动画类 */
.animate-confettiFall {
    animation: confettiFall 3s linear infinite;
}

/* 蛋糕动画类 */
.animate-cakeRotate {
    animation: cakeRotate 10s linear infinite;
}

.animate-cakeAppear {
    animation: cakeAppear 2s ease-out forwards;
}

/* 火焰动画类 */
.animate-flameFlicker {
    animation: flameFlicker 0.5s infinite alternate;
}

.animate-candleLight {
    animation: candleLight 0.8s ease-out forwards;
}

/* 按钮动画类 */
.animate-buttonPress {
    animation: buttonPress 0.2s ease-out;
}

.animate-buttonGlow {
    animation: buttonGlow 2s infinite;
}

/* 粒子动画类 */
.animate-heartFall {
    animation: heartFall 4s linear infinite;
}

.animate-petalFloat {
    animation: petalFloat 6s ease-in-out infinite;
}

.animate-bubbleRise {
    animation: bubbleRise 5s ease-out infinite;
}

/* 烟花动画类 */
.animate-fireworkExplode {
    animation: fireworkExplode 1s ease-out forwards;
}

/* 灯光动画类 */
.animate-lightBlink {
    animation: lightBlink 1s infinite;
}

.animate-colorCycle {
    animation: colorCycle 10s linear infinite;
}

/* 动画延迟类 */
.animate-delay-100 { animation-delay: 0.1s; }
.animate-delay-200 { animation-delay: 0.2s; }
.animate-delay-300 { animation-delay: 0.3s; }
.animate-delay-500 { animation-delay: 0.5s; }
.animate-delay-700 { animation-delay: 0.7s; }
.animate-delay-1000 { animation-delay: 1s; }

/* 动画持续时间类 */
.animate-duration-fast { animation-duration: var(--transition-fast); }
.animate-duration-normal { animation-duration: var(--transition-normal); }
.animate-duration-slow { animation-duration: var(--transition-slow); }

/* 动画暂停类 */
.animate-paused {
    animation-play-state: paused;
}

/* 性能优化 */
.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-auto {
    will-change: auto;
}

/* 减少动画（用户偏好） */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
} 