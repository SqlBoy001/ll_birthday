/**
 * 简化版Hammer.js替代品
 * 只提供基本的触摸手势支持
 */
(function(window) {
    'use strict';
    
    // 创建简化的Hammer对象
    function Hammer(element, options) {
        this.element = element;
        this.options = options || {};
        this.handlers = {};
        
        return this;
    }
    
    // 添加事件监听
    Hammer.prototype.on = function(events, handler) {
        events.split(' ').forEach((event) => {
            if (!this.handlers[event]) {
                this.handlers[event] = [];
            }
            this.handlers[event].push(handler);
        });
        return this;
    };
    
    // 移除事件监听
    Hammer.prototype.off = function(events, handler) {
        events.split(' ').forEach((event) => {
            if (this.handlers[event]) {
                if (handler) {
                    const index = this.handlers[event].indexOf(handler);
                    if (index > -1) {
                        this.handlers[event].splice(index, 1);
                    }
                } else {
                    this.handlers[event] = [];
                }
            }
        });
        return this;
    };
    
    // 触发事件
    Hammer.prototype.trigger = function(eventType, eventData) {
        if (this.handlers[eventType]) {
            this.handlers[eventType].forEach((handler) => {
                handler(eventData);
            });
        }
    };
    
    // 销毁
    Hammer.prototype.destroy = function() {
        this.handlers = {};
        this.element = null;
    };
    
    // 导出到全局
    window.Hammer = Hammer;
    
    // 如果没有原生Hammer，提供一个兼容的版本
    if (typeof window.Hammer === 'undefined') {
        window.Hammer = Hammer;
    }
    
})(window); 